version: "3.9"

services:
  db:
    image: postgres:15
    container_name: postgres-db-go-rest-template
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: go_rest
    ports:
      - "54390:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  migrations:
    image: arigaio/atlas:latest
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.compose
    volumes:
      - ./ent/migrate/migrations:/migrations
    command: >
      migrate apply
      --dir file:///migrations
      --url $DB_URL
      --revisions-schema atlas_schema_revisions
    restart: "no"  # Se ejecuta una vez y termina correctamente (Exit 0)

  api:
    container_name: go-rest-template
    build: .
    ports:
      - "8080:8080"
    environment:
      - APP_ENV=development
      - APP_PORT=8080
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=go_rest
    depends_on:
      migrations:
        condition: service_completed_successfully
    command: ./go-rest-template
    restart: always

volumes:
  pgdata:

networks:
  default:
    name: go-rest-network
